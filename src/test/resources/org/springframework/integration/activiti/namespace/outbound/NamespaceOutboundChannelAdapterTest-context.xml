<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:activiti="http://www.springframework.org/schema/integration/activiti"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/integration/activiti http://www.springframework.org/schema/integration/activiti/spring-integration-activiti.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       ">


    <context:component-scan base-package="org.springframework.integration.activiti.namespace.outbound"/>

    <context:property-placeholder location="db.properties"/>

    <int:poller default="true">
        <int:interval-trigger interval="1000"/>
    </int:poller>


    <int:channel id="triggerChannel">
        <int:queue capacity="100"/>
    </int:channel>


    <!--
     the mapped-process-variables is interesting because it demonstrates that
     customerId, customerFirstName, and customerLastName are mapped, while customerAge is not.

     This of course could have been rewritten as customer*, to grab all of them.

     Additionaly, the message send to this adapter has the name of the proces definition to start as a header,
     ActivitiConstants#WELL_KNOWN_PROCESS_DEFINITION_NAME_HEADER_KEY. If it hadn't, then an error would have been thrown
     because no process-definition attribute is specified on this adapter declaration, either.

    -->
    <activiti:outbound-channel-adapter channel="triggerChannel" process-engine="processEngine"  mapped-process-variables="customerId,customer*Name"/>

</beans>
